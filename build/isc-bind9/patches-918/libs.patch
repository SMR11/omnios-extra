diff -wpruN '--exclude=*.orig' a~/m4/ax_pthread.m4 a/m4/ax_pthread.m4
--- a~/m4/ax_pthread.m4	1970-01-01 00:00:00
+++ a/m4/ax_pthread.m4	1970-01-01 00:00:00
@@ -204,7 +204,7 @@ case $target_os in
         # that too in a future libc.)  So we'll check first for the
         # standard Solaris way of linking pthreads (-mt -lpthread).
 
-        ax_pthread_flags="-mt,-lpthread pthread $ax_pthread_flags"
+        # ax_pthread_flags="-mt,-lpthread pthread $ax_pthread_flags"
         ;;
 esac
 
@@ -237,13 +237,13 @@ ax_pthread_clang="$ax_cv_PTHREAD_CLANG"
 # [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555
 # To solve this, first try -pthread together with -lpthread for GCC
 
-AS_IF([test "x$GCC" = "xyes"],
-      [ax_pthread_flags="-pthread,-lpthread -pthread -pthreads $ax_pthread_flags"])
+# AS_IF([test "x$GCC" = "xyes"],
+#       [ax_pthread_flags="-pthread,-lpthread -pthread -pthreads $ax_pthread_flags"])
 
 # Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first
 
-AS_IF([test "x$ax_pthread_clang" = "xyes"],
-      [ax_pthread_flags="-pthread,-lpthread -pthread"])
+# AS_IF([test "x$ax_pthread_clang" = "xyes"],
+#       [ax_pthread_flags="-pthread,-lpthread -pthread"])
 
 
 # The presence of a feature test macro requesting re-entrant function
