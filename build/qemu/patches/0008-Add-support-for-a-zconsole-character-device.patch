From 8479fb27ef6486bbc7f915f055826465c4199f47 Mon Sep 17 00:00:00 2001
From: Andy Fiddaman <illumos@fiddaman.net>
Date: Mon, 22 May 2023 20:31:38 +0000
Subject: Add support for a zconsole character device

---
 chardev/char-zconsole.c | 74 +++++++++++++++++++++++++++++++++++++++++
 chardev/meson.build     |  2 ++
 include/chardev/char.h  |  1 +
 include/qemu/osdep.h    |  4 +++
 meson.build             |  2 ++
 qapi/char.json          |  2 ++
 6 files changed, 85 insertions(+)
 create mode 100644 chardev/char-zconsole.c

diff --git a/chardev/char-zconsole.c b/chardev/char-zconsole.c
new file mode 100644
index 0000000000..86d0df36e2
--- /dev/null
+++ b/chardev/char-zconsole.c
@@ -0,0 +1,74 @@
+#include "qemu/osdep.h"
+#include "qemu/module.h"
+#include "qemu/option.h"
+#include "qemu/sockets.h"
+#include "io/channel-file.h"
+#include "qapi/error.h"
+
+#include <sys/ioctl.h>
+#include <termios.h>
+#include "chardev/char-fd.h"
+
+#ifdef HAVE_CHARDEV_ZCONSOLE
+
+// XXX once illumos has cfmakeraw() that can be used instead.
+static void
+cfmakeraw (struct termios *termios_p)
+{
+	termios_p->c_iflag &=
+	    ~(IGNBRK | BRKINT | PARMRK | ISTRIP | INLCR | IGNCR | ICRNL | IXON);
+	termios_p->c_oflag &= ~OPOST;
+	termios_p->c_lflag &= ~(ECHO | ECHONL | ICANON | ISIG | IEXTEN);
+	termios_p->c_cflag &= ~(CSIZE | PARENB);
+	termios_p->c_cflag |= CS8;
+
+	termios_p->c_cc[VMIN] = 0;
+	termios_p->c_cc[VTIME] = 0;
+}
+
+static void
+char_zconsole_open(Chardev *chr, ChardevBackend *backend, bool *be_opened,
+    Error **errp)
+{
+	struct termios tty;
+	int fd;
+
+	fd = qmp_chardev_open_file_source((char *)"/dev/zconsole",
+	    O_RDWR | O_NONBLOCK, errp);
+	if (fd < 0)
+		return;
+
+	tcgetattr(fd, &tty);
+	cfmakeraw(&tty);
+	tcsetattr(fd, TCSAFLUSH, &tty);
+
+	if (!g_unix_set_fd_nonblocking(fd, true, NULL)) {
+		error_setg_errno(errp, errno, "Failed to set FD nonblocking");
+		return;
+	}
+
+	qemu_chr_open_fd(chr, fd, fd);
+}
+
+static void
+char_zconsole_init(ObjectClass *oc, void *data)
+{
+	ChardevClass *cc = CHARDEV_CLASS(oc);
+
+	cc->open = char_zconsole_open;
+}
+
+static const TypeInfo char_serial_type_info = {
+	.name = TYPE_CHARDEV_ZCONSOLE,
+	.parent = TYPE_CHARDEV_FD,
+	.class_init = char_zconsole_init,
+};
+
+static void register_types(void)
+{
+	type_register_static(&char_serial_type_info);
+}
+
+type_init(register_types);
+
+#endif
diff --git a/chardev/meson.build b/chardev/meson.build
index 6d56ad32fd..47e3bcb8b1 100644
--- a/chardev/meson.build
+++ b/chardev/meson.build
@@ -26,6 +26,8 @@ chardev_ss.add(when: 'CONFIG_WIN32', if_true: files(
   'char-win.c',
 ))
 
+chardev_ss.add(when: 'CONFIG_SOLARIS', if_true: files('char-zconsole.c'))
+
 chardev_ss = chardev_ss.apply(config_targetos, strict: false)
 
 system_ss.add(files(
diff --git a/include/chardev/char.h b/include/chardev/char.h
index 01df55f9e8..8e47f42149 100644
--- a/include/chardev/char.h
+++ b/include/chardev/char.h
@@ -241,6 +241,7 @@ OBJECT_DECLARE_TYPE(Chardev, ChardevClass, CHARDEV)
 #define TYPE_CHARDEV_PARALLEL "chardev-parallel"
 #define TYPE_CHARDEV_FILE "chardev-file"
 #define TYPE_CHARDEV_SERIAL "chardev-serial"
+#define TYPE_CHARDEV_ZCONSOLE "chardev-zconsole"
 #define TYPE_CHARDEV_SOCKET "chardev-socket"
 #define TYPE_CHARDEV_UDP "chardev-udp"
 
diff --git a/include/qemu/osdep.h b/include/qemu/osdep.h
index d30ba73eda..4c653d5c66 100644
--- a/include/qemu/osdep.h
+++ b/include/qemu/osdep.h
@@ -514,6 +514,10 @@ void qemu_anon_ram_free(void *ptr, size_t size);
 #define HAVE_CHARDEV_SERIAL 1
 #endif
 
+#ifdef __illumos__
+#define	HAVE_CHARDEV_ZCONSOLE 1
+#endif
+
 #if defined(__HAIKU__)
 #define SIGIO SIGPOLL
 #endif
diff --git a/meson.build b/meson.build
index 04cffd4623..9f87c1b190 100644
--- a/meson.build
+++ b/meson.build
@@ -2848,6 +2848,8 @@ if targetos == 'darwin'
   config_targetos += {'CONFIG_DARWIN': 'y'}
 elif targetos == 'linux'
   config_targetos += {'CONFIG_LINUX': 'y'}
+elif targetos == 'sunos'
+  config_targetos += {'CONFIG_SOLARIS': 'y'}
 endif
 if targetos in bsd_oses
   config_targetos += {'CONFIG_BSD': 'y'}
diff --git a/qapi/char.json b/qapi/char.json
index c1bab7b855..31f77a395c 100644
--- a/qapi/char.json
+++ b/qapi/char.json
@@ -473,6 +473,7 @@
 { 'enum': 'ChardevBackendKind',
   'data': [ 'file',
             'serial',
+            'zconsole',
             'parallel',
             'pipe',
             'socket',
@@ -615,6 +616,7 @@
   'discriminator': 'type',
   'data': { 'file': 'ChardevFileWrapper',
             'serial': 'ChardevHostdevWrapper',
+            'zconsole': 'ChardevHostdevWrapper',
             'parallel': 'ChardevHostdevWrapper',
             'pipe': 'ChardevHostdevWrapper',
             'socket': 'ChardevSocketWrapper',
