struct comment is defined in /usr/include/pwd.h under an __EXTENSIONS__ guard
however the source requires other definitions under __EXTENSIONS__

diff -wpruN --no-dereference '--exclude=*.orig' a~/file.c a/file.c
--- a~/file.c	1970-01-01 00:00:00
+++ a/file.c	1970-01-01 00:00:00
@@ -107,7 +107,7 @@ void freefiletree(struct _info *ent)
 struct _info **fprune(struct _info *head, const char *path, bool matched, bool root)
 {
   struct _info **dir, *new = NULL, *end = NULL, *ent, *t;
-  struct comment *com;
+  struct comment_ *com;
   struct ignorefile *ig = NULL;
   struct infofile *inf = NULL;
   char *cur, *fpath = xmalloc(sizeof(char) * MAXPATH);
diff -wpruN --no-dereference '--exclude=*.orig' a~/info.c a/info.c
--- a~/info.c	1970-01-01 00:00:00
+++ a/info.c	1970-01-01 00:00:00
@@ -32,11 +32,11 @@ extern char xpattern[PATH_MAX];
 
 struct infofile *infostack = NULL;
 
-struct comment *new_comment(struct pattern *phead, char **line, int lines)
+struct comment_ *new_comment(struct pattern *phead, char **line, int lines)
 {
   int i;
 
-  struct comment *com = xmalloc(sizeof(struct comment));
+  struct comment_ *com = xmalloc(sizeof(struct comment_));
   com->pattern = phead;
   com->desc = xmalloc(sizeof(char *) * (size_t)(lines+1));
   for(i=0; i < lines; i++) com->desc[i] = line[i];
@@ -50,7 +50,7 @@ struct infofile *new_infofile(const char
   struct stat st;
   char buf[PATH_MAX], rpath[PATH_MAX];
   struct infofile *inf;
-  struct comment *chead = NULL, *cend = NULL, *com;
+  struct comment_ *chead = NULL, *cend = NULL, *com;
   struct pattern *phead = NULL, *pend = NULL, *p;
   char *line[PATH_MAX];
   FILE *fp;
@@ -128,7 +128,7 @@ void push_infostack(struct infofile *inf
 struct infofile *pop_infostack(void)
 {
   struct infofile *inf;
-  struct comment *cn, *cc;
+  struct comment_ *cn, *cc;
   struct pattern *p, *c;
   int i;
 
@@ -156,10 +156,10 @@ struct infofile *pop_infostack(void)
  * Returns an info pointer if a path matches a pattern.
  * top == 1 if called in a directory with a .info file.
  */
-struct comment *infocheck(const char *path, const char *name, int top, bool isdir)
+struct comment_ *infocheck(const char *path, const char *name, int top, bool isdir)
 {
   struct infofile *inf = infostack;
-  struct comment *com;
+  struct comment_ *com;
   struct pattern *p;
 
   if (inf == NULL) return NULL;
diff -wpruN --no-dereference '--exclude=*.orig' a~/tree.c a/tree.c
--- a~/tree.c	1970-01-01 00:00:00
+++ a/tree.c	1970-01-01 00:00:00
@@ -875,7 +875,7 @@ struct _info *getinfo(const char *name,
 
 struct _info **read_dir(char *dir, ssize_t *n, int infotop)
 {
-  struct comment *com;
+  struct comment_ *com;
   static char *path = NULL;
   static size_t pathsize;
   struct _info **dl, *info;
diff -wpruN --no-dereference '--exclude=*.orig' a~/tree.h a/tree.h
--- a~/tree.h	1970-01-01 00:00:00
+++ a/tree.h	1970-01-01 00:00:00
@@ -168,15 +168,15 @@ struct ignorefile {
 };
 
 /* info.c */
-struct comment {
+struct comment_ {
   struct pattern *pattern;
   char **desc;
-  struct comment *next;
+  struct comment_ *next;
 };
 
 struct infofile {
   char *path;
-  struct comment *comments;
+  struct comment_ *comments;
   struct infofile *next;
 };
 
@@ -297,7 +297,7 @@ struct ignorefile *pop_filterstack(void)
 struct infofile *new_infofile(const char *path, bool checkparents);
 void push_infostack(struct infofile *inf);
 struct infofile *pop_infostack(void);
-struct comment *infocheck(const char *path, const char *name, int top, bool isdir);
+struct comment_ *infocheck(const char *path, const char *name, int top, bool isdir);
 void printcomment(size_t line, size_t lines, char *s);
 
 /* list.c */
